logistic regression:
---------------------
data_set we used is iris dataset


* logistic regression is used to predict the out put of categorical dependent variable using set of independent variables

ex: 0 or 1
    yess or no
    possiple or not
    spam or not spam

equation for logistic is
------------------------
|             1        |
|y =   --------------- |
|        1+ e^-(mx+c)  |
------------------------
* to check if the data set is consisting of any null values we will use 
-->variable.isnull().sum()
-->ds["species"].unique() is to know the names of the unique species it is also said to be set

in iris data set we should predict the species it is in the categorical values so me need to convert them into digits 

variable["species"].replace({"se":"1","setosa":"2","versicolor":"3","virginica":"4"},inplace=True)
# inplace=True will make the data set change completely

*after changing we need to do training and testing to the model

*for training 80% of data will be used which is choosen by the interpreter randomly.
*for testing 20% of data will be used.

#for training the model we will be importing train_test_split from sklearn.model_selection

x_train,x_test,y_train,y_test=train_test_split(ds[["sepalLengthCm","sepalwidthCm","petallengthcm","petalwidthcm"]],ds["species"],train_size=0.8)

#here train_size=0.8 (which is (80%))
#remaining will be testing
print(x_train)
#op:
120 rows in 150 rows will be printed
print(x_test)
#op:
20 rows will be printded

##till here we have trained and tested now we are going to predict the species

from sklearn.linear_model import LogisticRegression
logi_model=LogisticRegression()
logi_model.fit(x_train,y_train)
logi_model.predict(x_test)

##to check wether the predicted and actual values are same we should use logi_model.score(actual,predicted)
logi_model.score(x_test,y_test)
#op:
1.0 if 100 percentage matched
100% accurate












































































































































































































































































